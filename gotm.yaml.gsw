# This file was created with only commonly used settings, plus those that differ from the default specified by GOTM.
# You can generate a configuration with every possible setting with: gotm --write_yaml <OUTFILE> --detail full
# To see only the settings that differ from the default, use: gotm --write_yaml <OUTFILE> --detail minimal
version: 7                                   # version of configuration file [default=7]
title: GOTM Simulation                       # simulation title used in output [default=GOTM simulation]
location:
   name: PROVESS Northern Experiment 1998    # station name used in output [default=GOTM site]
   latitude: 5.93333300E+01                  # latitude [degrees North; min=-90.0; max=90.0; default=0.0]
   longitude: 1.28333300E+00                 # longitude [degrees East; min=-360.0; max=360.0; default=0.0]
   depth: 110.0                              # water depth [m; min=0.0; default=100.0]
time:
   start: 1998-01-01 00:00:00                # start date and time [yyyy-mm-dd HH:MM:SS; default=2017-01-01 00:00:00]
   stop: 1999-01-01 00:00:00                 # stop date and time [yyyy-mm-dd HH:MM:SS; default=2018-01-01 00:00:00]
   dt: 3600.0                                # time step for integration [s; min=0.0; default=3600.0]
grid:
   nlev: 110                                 # number of layers [min=1; default=100]
   method: analytical                        # layer thickness specification [analytical=equal by default with optional zooming, file_sigma=prescribed relative fractions, file_h=prescribed thicknesses; default=analytical]
   ddu: 0.0                                  # surface zooming [dimensionless; min=0.0; default=0.0]
   ddl: 0.0                                  # bottom zooming [dimensionless; min=0.0; default=0.0]
   file:                                     # path to file with layer thicknesses [default=]
temperature:                                 # temperature profile used for initialization and optionally relaxation [Celsius]
   method: file                              # method [off, file=from file, constant, two_layer=two layers with linear gradient in between, buoyancy=from salinity and buoyancy frequency; default=off]
   constant_value: 20.0                      # value to use throughout the simulation [Celsius; default=0.0]
   file: t_prof_file.dat                     # path to file with series of profiles [default=]
   column: 1                                 # index of column to read from [default=1]
   two_layer:
      z_s: 30.0                              # depth where upper layer ends [m; min=0.0; default=0.0]
      t_s: 20.0                              # upper layer temperature [Celsius; min=0.0; max=40.0; default=0.0]
      z_b: 40.0                              # depth where lower layer begins [m; min=0.0; default=0.0]
      t_b: 15.0                              # lower layer temperature [Celsius; min=0.0; max=40.0; default=0.0]
   NN: 2.56000000E-04                        # square of buoyancy frequency [s^-2; min=0.0; default=0.0]
   relax:                                    # relax model temperature to observed/prescribed value
      tau: 1.00000000E+15                    # time scale for interior layer [s; min=0.0; default=1.00000000E+15]
salinity:                                    # salinity profile used for initialization and optionally relaxation [psu]
   method: file                              # method [off, file=from file, constant, two_layer=two layers with linear gradient in between, buoyancy=from temperature and buoyancy frequency; default=off]
   constant_value: 20.0                      # value to use throughout the simulation [psu; min=0.0; default=0.0]
   file: s_prof_file.dat                     # path to file with series of profiles [default=]
   column: 1                                 # index of column to read from [default=1]
   two_layer:
      z_s: 30.0                              # depth where upper layer ends [m; min=0.0; default=0.0]
      s_s: 20.0                              # upper layer salinity [psu; min=0.0; max=40.0; default=0.0]
      z_b: 40.0                              # depth where lower layer begins [m; min=0.0; default=0.0]
      s_b: 15.0                              # lower layer salinity [psu; min=0.0; max=40.0; default=0.0]
   NN: 2.56000000E-04                        # square of buoyancy frequency [s^-2; min=0.0; default=0.0]
   relax:                                    # relax model salinity to observed/prescribed value
      tau: 86400.0                           # time scale for interior layer [s; min=0.0; default=1.00000000E+15]
      tau_s: 86400.0                         # time scale for surface layer [s; min=0.0; default=1.00000000E+15]
      tau_b: 86400.0                         # time scale for bottom layer [s; min=0.0; default=1.00000000E+15]
surface:
   fluxes:                                   # heat and momentum fluxes
      method: kondo                          # method to calculate fluxes from meteorological conditions [off=use prescribed fluxes, kondo=Kondo (1975), fairall=Fairall et al. (1996); default=off]
      heat:                                  # prescribed total heat flux (sensible, latent and net back-radiation) [W/m^2]
         method: constant                    # method [constant, file=from file; default=constant]
         constant_value: 0.0                 # value to use throughout the simulation [W/m^2; default=0.0]
         file:                               # path to file with time series [default=]
         column: 1                           # index of column to read from [default=1]
      tx:                                    # prescribed momentum flux in West-East direction [Pa]
         method: constant                    # method [constant, file=from file; default=constant]
         constant_value: 0.0                 # value to use throughout the simulation [Pa; default=0.0]
         file:                               # path to file with time series [default=]
         column: 1                           # index of column to read from [default=1]
      ty:                                    # prescribed momentum flux in South-North direction [Pa]
         method: constant                    # method [constant, file=from file; default=constant]
         constant_value: 0.0                 # value to use throughout the simulation [Pa; default=0.0]
         file:                               # path to file with time series [default=]
         column: 1                           # index of column to read from [default=1]
   u10:                                      # wind speed in West-East direction @ 10 m [m/s]
      method: file                           # method [constant, file=from file; default=constant]
      constant_value: 0.0                    # value to use throughout the simulation [m/s; default=0.0]
      file: meteo_file.dat                   # path to file with time series [default=]
      column: 1                              # index of column to read from [default=1]
   v10:                                      # wind speed in South-North direction @ 10 m [m/s]
      method: file                           # method [constant, file=from file; default=constant]
      constant_value: 0.0                    # value to use throughout the simulation [m/s; default=0.0]
      file: meteo_file.dat                   # path to file with time series [default=]
      column: 2                              # index of column to read from [default=1]
   ssuv_method: absolute                     # wind treatment [absolute=use absolute wind speed, relative=use wind speed relative to current velocity; default=relative]
   airp:                                     # air pressure [Pa]
      method: file                           # method [constant, file=from file; default=constant]
      constant_value: 0.0                    # value to use throughout the simulation [Pa; default=0.0]
      file: meteo_file.dat                   # path to file with time series [default=]
      column: 3                              # index of column to read from [default=1]
      scale_factor: 100.0                    # scale factor to be applied to values read from file [default=1.0]
   airt:                                     # air temperature @ 2 m [Celsius or K]
      method: file                           # method [constant, file=from file; default=constant]
      constant_value: 0.0                    # value to use throughout the simulation [Celsius or K; default=0.0]
      file: meteo_file.dat                   # path to file with time series [default=]
      column: 4                              # index of column to read from [default=1]
   hum:                                      # humidity @ 2 m
      method: file                           # method [constant, file=from file; default=constant]
      constant_value: 0.0                    # value to use throughout the simulation [default=0.0]
      file: meteo_file.dat                   # path to file with time series [default=]
      column: 5                              # index of column to read from [default=1]
      type: relative                         # humidity metric [relative=relative humidity (%), wet_bulb=wet-bulb temperature, dew_point=dew point temperature, specific=specific humidity (kg/kg); default=relative]
   cloud:                                    # cloud cover [1]
      method: file                           # method [constant, file=from file; default=constant]
      constant_value: 0.0                    # value to use throughout the simulation [fraction; min=0.0; max=1.0; default=0.0]
      file: meteo_file.dat                   # path to file with time series [default=]
      column: 6                              # index of column to read from [default=1]
   precip:                                   # precipitation [m/s]
      method: constant                       # method [constant, file=from file; default=constant]
      constant_value: 0.0                    # value to use throughout the simulation [m/s; default=0.0]
      file:                                  # path to file with time series [default=]
      column: 1                              # index of column to read from [default=1]
      flux_impact: false                     # include effect on fluxes of sensible heat and momentum [default=false]
   calc_evaporation: false                   # calculate evaporation from meteorological conditions [default=false]
   swr:                                      # shortwave radiation [W/m^2]
      method: calculate                      # method [constant, file=from file, calculate=from time, location and cloud cover; default=constant]
      constant_value: 0.0                    # value to use throughout the simulation [W/m^2; min=0.0; default=0.0]
      file:                                  # path to file with time series [default=]
      column: 1                              # index of column to read from [default=1]
   longwave_radiation:                       # net longwave radiation [W/m^2]
      method: clark                          # method [file=from file, clark=Clark et al. (1974), hastenrath_lamb=Hastenrath and Lamb (1978), bignami=Bignami et al. (1995), berliand_berliand=Berliand and Berliand (1952), josey1=Josey et al. (2003) - 1, josey2=Josey et al. (2003) - 2; default=clark]
      file:                                  # path to file with time series [default=]
      column: 1                              # index of column to read from [default=1]
   albedo:
      method: payne                          # method to compute albedo [constant, payne=Payne (1972), cogley=Cogley (1979); default=payne]
      constant_value: 0.0                    # constant value to use throughout the simulation [fraction; min=0.0; max=1.0; default=0.0]
   sst:                                      # observed surface temperature [Celsius]
      method: file                           # method [constant, file=from file; default=constant]
      file: sst_file.dat                     # path to file with time series [default=]
   roughness:
      charnock: true                         # use Charnock (1955) roughness adaptation [default=false]
      charnock_val: 1400.0                   # empirical constant for roughness adaptation [dimensionless; min=0.0; default=1400.0]
      z0s_min: 0.02                          # hydrodynamic roughness (minimum value if Charnock adaptation is used) [m; min=0.0; default=0.02]
bottom:
   h0b: 0.03                                 # physical bottom roughness [m; min=0.0; default=0.05]
light_extinction:
   method: jerlov-i                          # water type [jerlov-i=Jerlov type I, jerlov-1-50m=Jerlov type 1 (upper 50 m), jerlov-ia=Jerlov type IA, jerlov-ib=Jerlov type IB, jerlov-ii=Jerlov type II, jerlov-iii=Jerlov type III, custom; default=jerlov-i]
   A:                                        # non-visible fraction of shortwave radiation [1]
      method: constant                       # method [constant, file=from file; default=constant]
      constant_value: 0.7                    # value to use throughout the simulation [fraction; min=0.0; max=1.0; default=0.7]
      file:                                  # path to file with time series [default=]
      column: 1                              # index of column to read from [default=1]
   g1:                                       # e-folding depth of non-visible shortwave radiation [m]
      method: constant                       # method [constant, file=from file; default=constant]
      constant_value: 0.4                    # value to use throughout the simulation [m; min=0.0; default=0.4]
      file:                                  # path to file with time series [default=]
      column: 1                              # index of column to read from [default=1]
   g2:                                       # e-folding depth of visible shortwave radiation [m]
      method: constant                       # method [constant, file=from file; default=constant]
      constant_value: 8.0                    # value to use throughout the simulation [m; min=0.0; default=8.0]
      file:                                  # path to file with time series [default=]
      column: 1                              # index of column to read from [default=1]
turbulence:
   turb_method: second_order                 # turbulence closure [convective=convective adjustment, first_order=first-order, second_order=second-order, cvmix; default=second_order]
   tke_method: tke                           # turbulent kinetic energy equation [local_eq=algebraic length scale equation, tke=differential equation for tke (k-epsilon style), mellor_yamada=differential equation for q^2/2 (Mellor-Yamada style); default=tke]
   len_scale_method: dissipation             # dissipative length scale [parabolic, triangular, xing_davies=Xing and Davies (1995), robert_ouellet=Robert and Ouellet (1987), blackadar=Blackadar (two boundaries) (1962), bougeault_andre=Bougeault and Andre (1986), eifler_schrimpf=Eifler and Schrimpf (ISPRAMIX) (1992), dissipation=dynamic dissipation rate equation, mellor_yamada=dynamic Mellor-Yamada q^2 l-equation, gls=generic length scale (GLS); default=dissipation]
   stab_method: schumann_gerz                # stability functions [constant, munk_anderson=Munk and Anderson (1954), schumann_gerz=Schumann and Gerz (1995), eifler_schrimpf=Eifler and Schrimpf (1992); default=constant]
   turb_param:
      cm0_fix: 5.47700000E-01                # value of the stability function in the log-law [dimensionless; min=0.0; default=5.47700000E-01]
      Prandtl0_fix: 0.74                     # turbulent Prandtl-number [dimensionless; min=0.0; default=0.74]
      cw: 100.0                              # constant of the wave-breaking model [dimensionless; min=0.0; default=100.0]
      compute_kappa: false                   # compute von Karman constant from model parameters [default=false]
      kappa: 0.4                             # von Karman constant [dimensionless; min=0.0; default=0.4]
      compute_c3: true                       # compute c3 (E3 for Mellor-Yamada) from steady-state Richardson number [default=true]
      Ri_st: 0.25                            # desired steady-state Richardson number [dimensionless; min=0.0; default=0.25]
      length_lim: true                       # apply Galperin et al. (1988) length scale limitation [default=true]
      galp: 0.53                             # coefficient for length scale limitation [dimensionless; min=0.0; default=0.27]
      const_num: 5.00000000E-04              # constant eddy diffusivity [m^2/s; min=0.0; default=5.00000000E-04]
      const_nuh: 5.00000000E-04              # constant heat diffusivity [m^2/s; min=0.0; default=5.00000000E-04]
      k_min: 1.00000000E-06                  # minimum turbulent kinetic energy [m^2/s^2; min=0.0; default=1.00000000E-10]
      eps_min: 1.00000000E-12                # minimum dissipation rate [m^2/s^3; min=0.0; default=1.00000000E-12]
      kb_min: 1.00000000E-10                 # minimum buoyancy variance [m^2/s^4; min=0.0; default=1.00000000E-10]
      epsb_min: 1.00000000E-14               # minimum buoyancy variance destruction rate [m^2/s^5; min=0.0; default=1.00000000E-14]
   generic:                                  # generic length scale (GLS) model
      gen_m: 1.0                             # exponent for k [dimensionless; default=1.5]
      gen_n: -0.67                           # exponent for l [dimensionless; default=-1.0]
      cpsi1: 1.0                             # empirical coefficient cpsi1 in psi equation [dimensionless; default=1.44]
      cpsi2: 1.22                            # empirical coefficient cpsi2 in psi equation [dimensionless; default=1.92]
      cpsi3minus: 0.05                       # cpsi3 for stable stratification [dimensionless; default=0.0]
      sig_kpsi: 0.8                          # Schmidt number for TKE diffusivity [dimensionless; default=1.0]
      sig_psi: 1.07                          # Schmidt number for psi diffusivity [dimensionless; default=1.3]
   keps:                                     # k-epsilon model
      ce3minus: -0.4                         # ce3 for stable stratification [dimensionless; default=0.0]
   my:                                       # Mellor-Yamada model
      length: linear                         # barotropic length scale in q^2 l equation [parabolic, triangular, linear=linear from surface; default=parabolic]
   scnd:                                     # second-order model
      method: quasi_eq                       # method [quasi_eq=quasi-equilibrium, weak_eq_kb_eq=weak equilibrium with algebraic buoyancy variance; default=weak_eq_kb_eq]
      scnd_coeff: cheng                      # coefficients of second-order model [custom, gibson_launder=Gibson and Launder (1978), mellor_yamada=Mellor and Yamada (1982), kantha_clayson=Kantha and Clayson (1994), luyten=Luyten et al. (1996), canuto-a=Canuto et al. (2001) (version A), canuto-b=Canuto et al. (2001) (version B), cheng=Cheng et al. (2002); default=canuto-a]
   iw:                                       # internal wave mixing
      alpha: 0.7                             # coefficient for Mellor internal wave model [dimensionless; default=0.0]
mimic_3d:                                    # effects of horizontal gradients
   ext_pressure:                             # external pressure
      type: elevation                        # pressure metric [elevation=horizontal gradient in surface elevation, velocity=horizontal velocities at given height above bed, average_velocity=vertically averaged horizontal velocities; default=elevation]
      dpdx:                                  # pressure in West-East direction
         method: file                        # method [constant, tidal=from tidal constituents, file=from file; default=constant]
         constant_value: 0.0                 # value to use throughout the simulation [default=0.0]
         file: ext_press_file.dat            # path to file with time series [default=]
         column: 2                           # index of column to read from [default=1]
         tidal:                              # tidal constituents
            amp_1: 0.0                       # amplitude of 1st harmonic [default=0.0]
            phase_1: 0.0                     # phase of 1st harmonic [s; default=0.0]
            amp_2: 0.0                       # amplitude of 2nd harmonic [default=0.0]
            phase_2: 0.0                     # phase of 2nd harmonic [s; default=0.0]
      dpdy:                                  # pressure in South-North direction
         method: file                        # method [constant, tidal=from tidal constituents, file=from file; default=constant]
         constant_value: 0.0                 # value to use throughout the simulation [default=0.0]
         file: ext_press_file.dat            # path to file with time series [default=]
         column: 3                           # index of column to read from [default=1]
         tidal:                              # tidal constituents
            amp_1: 0.0                       # amplitude of 1st harmonic [default=0.0]
            phase_1: 0.0                     # phase of 1st harmonic [s; default=0.0]
            amp_2: 0.0                       # amplitude of 2nd harmonic [default=0.0]
            phase_2: 0.0                     # phase of 2nd harmonic [s; default=0.0]
      h:                                     # height above bed [m]
         method: file                        # method [constant, file=from file; default=constant]
         constant_value: 0.0                 # value to use throughout the simulation [m; min=0.0; default=0.0]
         file: ext_press_file.dat            # path to file with time series [default=]
         column: 1                           # index of column to read from [default=1]
      period_1: 44714.0                      # period of 1st tidal harmonic (eg. M2-tide) [s; default=44714.0]
      period_2: 43200.0                      # period of 2nd tidal harmonic (eg. S2-tide) [s; default=43200.0]
   int_pressure:                             # internal pressure
      type: none                             # method [none, gradients=prescribed horiztonal gradients of T and S, plume=surface or bottom plume; default=none]
      gradients:                             # horizontal salinity and temperature gradients
         dtdx:                               # temperature gradient in West-East direction [Celsius/m]
            method: off                      # method [off, constant, file=from file; default=off]
            constant_value: 0.0              # value to use throughout the simulation [Celsius/m; default=0.0]
            file:                            # path to file with series of profiles [default=]
            column: 1                        # index of column to read from [default=1]
         dtdy:                               # temperature gradient in South-North direction [Celsius/m]
            method: off                      # method [off, constant, file=from file; default=off]
            constant_value: 0.0              # value to use throughout the simulation [Celsius/m; default=0.0]
            file:                            # path to file with series of profiles [default=]
            column: 1                        # index of column to read from [default=1]
         dsdx:                               # salinity gradient in West-East direction [psu/m]
            method: off                      # method [off, constant, file=from file; default=off]
            constant_value: 0.0              # value to use throughout the simulation [psu/m; default=0.0]
            file:                            # path to file with series of profiles [default=]
            column: 1                        # index of column to read from [default=1]
         dsdy:                               # salinity gradient in South-North direction [psu/m]
            method: off                      # method [off, constant, file=from file; default=off]
            constant_value: 0.0              # value to use throughout the simulation [psu/m; default=0.0]
            file:                            # path to file with series of profiles [default=]
            column: 1                        # index of column to read from [default=1]
      plume:                                 # surface or bottom plume
         type: bottom                        # plume type [surface=buoyant surface-attached, bottom=dense bottom-attached; default=bottom]
         x_slope: 0.0                        # plume slope in West-East direction [dimensionless; default=0.0]
         y_slope: 0.0                        # plume slope in South-North direction [dimensionless; default=0.0]
      t_adv: false                           # horizontally advect temperature [default=false]
      s_adv: false                           # horizontally advect salinity [default=false]
   zeta:                                     # surface elevation [m]
      method: constant                       # method [constant, tidal=from tidal constituents, file=from file; default=constant]
      constant_value: 0.0                    # value to use throughout the simulation [m; default=0.0]
      file: zeta_file.dat                    # path to file with time series [default=]
      column: 1                              # index of column to read from [default=1]
      tidal:                                 # tidal constituents
         period_1: 44714.0                   # period of 1st harmonic (eg. M2-tide) [s; default=44714.0]
         amp_1: 1.0                          # amplitude of 1st harmonic [m; default=0.0]
         phase_1: 0.0                        # phase of 1st harmonic [s; default=0.0]
         period_2: 43200.0                   # period of 2nd harmonic (eg. S2-tide) [s; default=43200.0]
         amp_2: 0.5                          # amplitude of 2nd harmonic [m; default=0.0]
         phase_2: 0.0                        # phase of 2nd harmonic [s; default=0.0]
   w:                                        # vertical velocity
      max:                                   # maximum velocity [m/s]
         method: off                         # method [off, constant, file=from file; default=off]
         constant_value: 0.0                 # value to use throughout the simulation [m/s; default=0.0]
         file:                               # path to file with time series [default=]
         column: 1                           # index of column to read from [default=1]
      height:                                # height of maximum velocity [m]
         method: constant                    # method [constant, file=from file; default=constant]
         constant_value: 0.0                 # value to use throughout the simulation [m; default=0.0]
         file:                               # path to file with time series [default=]
         column: 1                           # index of column to read from [default=1]
      adv_discr: p2_pdm                      # vertical advection scheme [upstream=first-order upstream, p2=third-order upstream-biased polynomial, superbee=third-order TVD with Superbee limiter, muscl=third-order TVD with MUSCL limiter, p2_pdm=third-order TVD with ULTIMATE QUICKEST limiter; default=p2_pdm]
o2:                                          # oxygen
   scale_factor: 31.25                       # scale factor to be applied to values read from file [default=1.0]
cvmix:
   surface_layer:                            # surface layer mixing
      use: true                              # compute surface layer mixing coefficients [default=true]
      kpp:                                   # K-Profile Parameterization
         use: true                           # use the K-Profile Parameterization [default=true]
         langmuir_method: none               # method of Langmuir turbulence pararmeterization [none, lwf16=Li et al. (2016), lf17=Li and Fox-Kemper (2017), rwh16=Reichl et al. (2016); default=none]
         surface_layer_extent: 0.1           # extent of surface layer in fraction of the boundary layer [dimensionless; min=0.0; max=1.0; default=0.1]
         Ri_c: 0.3                           # critical Richardson number [dimensionless; min=0.0; default=0.3]
         check_Ekman_length: false           # limit the OBL by the Ekman depth [default=false]
         check_MonOb_length: false           # limit the OBL by the Monin-Obukhov depth [default=false]
         use_enhanced_diff: true             # enhance diffusivity at OBL [default=true]
         use_noDGat1: true                   # zero gradient of the shape function at OBL [default=true]
         match_technique: simple             # matching technique of shape functions with the ocean interior [simple=simple shapes, gradient=gradient term, both=both gradient and nonlocal terms, parabolic=parabolic nonlocal term; default=simple]
         bulk_Ri_interp_type: quadratic      # interpolation type for the bulk Richardson number [linear, quadratic, cubic; default=quadratic]
         OBL_interp_type: lmd94              # interpolation type for diffusivity and viscosity at OBL [linear, quadratic, cubic, lmd94=Large et al. (1994); default=lmd94]
   interior:                                 # interior mixing
      use: false                             # compute interior mixing coefficients [default=false]
      background:
         use: false                          # use interior background mixing coefficients [default=false]
         diffusivity: 1.00000000E-05         # background diffusivity [m^2/s; default=1.00000000E-05]
         viscosity: 1.00000000E-04           # background viscosity [m^2/s; default=1.00000000E-04]
      shear:
         use: false                          # compute interior shear mixing coefficients [default=false]
         num_smooth_Ri: 1                    # number of iterations to smooth the gradient Richardson number [default=1]
         mix_scheme: kpp                     # shear mixing scheme [pp=Pacanowski and Philander (1981), kpp=Large et al. (1994); default=kpp]
         PP_nu_zero: 0.005                   # numerator in viscosity term in PP [m^2/s; default=0.005]
         PP_alpha: 5.0                       # coefficient of Ri in denominator of visc / diff terms [dimensionless; default=5.0]
         PP_exp: 2.0                         # exponent of denominator in viscosity term [dimensionless; default=2.0]
         KPP_nu_zero: 0.005                  # leading coefficient of the KPP shear mixing formula [m^2/s; default=0.005]
         KPP_Ri_zero: 0.7                    # critical Richardson number for KPP shear mixing [dimensionless; default=0.7]
         KPP_exp: 3.0                        # exponent of unitless factor of diffusivity [dimensionless; default=3.0]
      convection:
         use: false                          # compute interior convective mixing coefficients [default=false]
         diffusivity: 1.0                    # convective diffusivity [m^2/s; default=1.0]
         viscosity: 1.0                      # convective viscosity [m^2/s; default=1.0]
         basedOnBVF: true                    # triger convection based on the squared Brunt-Vaisala frequency [default=true]
         triggerBVF: 0.0                     # threshold of squared Brunt-Vaisala frequency [1/s^2; default=0.0]
      tidal_mixing:
         use: false                          # compute interior tidal mixing coefficients [default=false]
      double_diffusion:
         use: false                          # compute interior double diffusion mixing coefficients [default=false]
buoyancy:
   NN_ini: 1.00000000E-04                    # initial buoyancy gradient (squared buoyancy frequency) [s^-2; default=0.0]
equation_of_state:                           # equation of state
   method: full_teos-10                      # density formulation [full_teos-10=TEOS-10, linear_teos-10=linearized at T0, S0, p0 (rho0 is calculated), linear_custom=linearized at T0, S0, rho0, dtr0, dsr0; default=full_teos-10]
   rho0: 1027.0                              # reference density [kg/m3; default=1027.0]
   linear:
      T0: 10.0                               # reference temperature [Celsius; min=-2.0; default=10.0]
      S0: 35.0                               # reference salinity [psu; min=0.0; default=35.0]
      p0: 0.0                                # reference pressure [Pa; default=0.0]
      dtr0: -0.17                            # thermal expansion coefficient [kg/m^3/K; default=-0.17]
      dsr0: 0.78                             # saline expansion coefficient [kg/m^3/psu; default=0.78]
restart:
   load: false                               # initialize simulation with state stored in restart.nc [default=false]
output:
   nns_annual:                               # path of output file, excluding extension
      time_unit: hour                        # time unit [second, hour, day, month, year, dt=model time step; default=day]
      time_step: 1                           # number of time units between output [min=1; default=1]
      time_method: point                     # treatment of time dimension [point=instantaneous, mean, integrated; default=point]
      variables:
      - source: *                            # variable name in model
